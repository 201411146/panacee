# coding=utf-8
# Week 3 Homework / baekjoon 6603 - https://www.acmicpc.net/problem/6603

# 입력
# 독일 로또는 {1, 2, ..., 49}에서 수 6개를 고른다.
# 로또 번호를 선택하는데 사용되는 가장 유명한 전략은 49가지 수 중 k(k>6)개의 수를 골라 집합 S를
# 만든 다음 그 수만 가지고 번호를 선택하는 것이다.
# 예를 들어, k=8, S={1,2,3,5,8,13,21,34}인 경우 이 집합 S에서 수를 고를 수 있는
# 경우의 수는 총 28가지이다.
# ([1,2,3,5,8,13], [1,2,3,5,8,21], [1,2,3,5,8,34],
# [1,2,3,5,13,21], ..., [3,5,8,13,21,34])
# 집합 S와 k가 주어졌을 때, 수를 고르는 모든 방법을 구하는 프로그램을 작성하시오.

# 출력
# 각 테스트 케이스마다 수를 고르는 모든 방법을 출력한다. 이때, 사전 순으로 출력한다.
# 각 테스트 케이스 사이에는 빈 줄을 하나 출력한다.

# 입력 예시
# 7 1 2 3 4 5 6 7

# 출력 예시
# 1 2 3 4 5 6
# 1 2 3 4 5 7
# 1 2 3 4 6 7
# 1 2 3 5 6 7
# 1 2 4 5 6 7
# 1 3 4 5 6 7
# 2 3 4 5 6 7

# [python] itertools를 이용해 순열과 조합 구하기
# https://itholic.github.io/python-combination-permutation/

# import itertools
# arr = ['1', '2', '3']
# print("arrays -> ", arr)
# #순열방식 - permutations
# print()
# print("itertools.permutations(arr)")
# print(list(map(' '.join, itertools.permutations(arr))))
# print("itertools.permutations(arr, 2)")
# print(list(map(' '.join, itertools.permutations(arr, 2))))
# #조합방식 - combinations
# print()
# print("itertools.combinations(arr, 3)")
# print(list(map(' '.join, itertools.combinations(arr, 3))))
# print("itertools.combinations(arr, 2)")
# print(list(map(' '.join, itertools.combinations(arr, 2))))
